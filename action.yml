name: 'ApproveOps - Approvals in IssueOps'
description: 'IssueOps (ChatOps) workflows that require Approvals from someone in a designated GitHub team'

branding:
  icon: "user-check"
  color: "blue"

inputs:
  team-name:
    description: "The name of the team in GitHub to check for the approval command; e.g.: approver-team"
    required: true
  token:
    description: "GitHub App installation token or PAT that has access to read the comments and check the org team's membership"
    required: true
  fail-if-approval-not-found:
    description: "Fail the action (i.e. show the action run as red) if the command is not found in the comments from someone in the approver team"
    required: true
    default: 'true'
  post-successful-approval-comment:
    description: "Boolean whether to post successful approval comment"
    required: true
    default: 'true'
  successful-approval-comment:
    description: "Comment to post if there is an approval is found"
    required: true
    default: ":tada:  You were able to run the workflow because someone left an approval in the comments!! :tada:"

outputs:
  approved:
    description: "Returns 'true' if the approval command was found in a comment from someone in the approver team, otherwise 'false'"
    value: ${{ steps.check-approval.outputs.approved }}

runs:
  using: "composite"
  steps:
    - id: check-approval
      name: check if there is an approve command from authorized party
      env:
        GH_TOKEN: ${{ inputs.token }}
      shell: bash
      run: |
        # "checking for a /approve command in the comments from someone in the approver team"
        users=$(gh api --paginate '/orgs/${{ github.repository_owner }}/teams/${{ inputs.team-name }}/members' | jq -c '.[].login')
        approveCommand="/approve"
        authorized=false
        comments=$(gh api --paginate '${{ github.event.comment.issue_url }}/comments')
        for comment in $(echo $comments | jq -r '.[] | @base64'); do
            body=$(echo $comment | base64 --decode | jq -r '.body' | tr -d ' ' | tr -d '\r\n')
            actor=$(echo $comment | base64 --decode | jq -r '.user.login')
            id=$(echo $comment | base64 --decode | jq -r '.id')
            if [[ $body == "$approveCommand" ]]; then
                echo "Approval command found in comment id $id ..."
                echo $users | grep -q $actor && echo "Found $actor in team: ${{ inputs.team-name }}" && authorized=true || echo "Not found $actor in team: ${{ inputs.team-name }}"
                break
            else
                echo "Approval command not found in comment id $id ..."
            fi
        done
        if $authorized; then
            echo "Approval authorized by $actor"
            echo "approved=true" >> $GITHUB_OUTPUT
        else
            echo "Approval not found or not authorized"
            echo "approved=false" >> $GITHUB_OUTPUT
            if !(${{ inputs.fail-if-approval-not-found }}); then
              echo "::notice title=Not Approved::There is no /approve command in the comments from someone in the ${{ github.repository_owner }}/${{ inputs.team-name }} team"
            fi
        fi

    - if: ${{ steps.check-approval.outputs.approved == 'false' && inputs.fail-if-approval-not-found == 'true' }}
      name: Create completed comment
      uses: peter-evans/create-or-update-comment@v1
      with:
        token: ${{ inputs.app-private-key }}
        issue-number: ${{ github.event.issue.number }}
        body: |
          Hey, @${{ github.event.comment.user.login }}!
          :cry:  No one approved your run yet! Have someone from the @${{ github.repository_owner }}/${{ inputs.team-name }} team run `/approve` and then try your command again
          :no_entry_sign: :no_entry: Marking the [workflow run](${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}) as failed

    - if: ${{ steps.check-approval.outputs.approved == 'false' && inputs.fail-if-approval-not-found == 'false' }}
      name: Create completed comment
      uses: peter-evans/create-or-update-comment@v2
      with:
        token: ${{ inputs.token }}
        issue-number: ${{ github.event.issue.number }}
        body: |
          Hey, @${{ github.event.comment.user.login }}!
          :cry:  No one approved your run yet! Have someone from the @${{ github.repository_owner }}/${{ inputs.team-name }} team run `/approve` and then try your command again
          :warning: :pause_button: The [workflow run](${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}) wasn't marked as failed
          
    - if: ${{ steps.check-approval.outputs.approved == 'true' && inputs.post-successful-approval-comment == 'true' }}
      name: Create completed comment
      uses: peter-evans/create-or-update-comment@v2
      with:
        token: ${{ inputs.token }}
        issue-number: ${{ github.event.issue.number }}
        body: |
          Hey, @${{ github.event.comment.user.login }}!
          ${{ inputs.successful-approval-comment }}

    # if specified, exit with an error if approval is not found
    - name: exit and fail workflow if not approved
      if: ${{ inputs.fail-if-approval-not-found == 'true' && steps.check-approval.outputs.approved == 'false' }}
      uses: actions/github-script@v6
      with:
        script: |
          core.setFailed("There is no /approve command in the comments from someone in the ${{ github.repository_owner }}/${{ inputs.team-name }} team");
